#!/bin/bash

# run it like this:
# AWS_ACCESS_KEY_ID=<your key> AWS_SECRET_KEY=<your secret> AWS_STATIC_BUCKET=ateliestestestatic CLIENT_LIB_VERSION=1.0 ./uploadPublicFiles

echo $(date) starting...
if [ "$AWS_SECRET_KEY" = '' ]; then
  echo Missing environment variable AWS_SECRET_KEY
  exit 11
fi
if [ "$AWS_ACCESS_KEY_ID" = '' ]; then
  echo Missing environment variable AWS_ACCESS_KEY_ID
  exit 12
fi
if [ "$AWS_STATIC_BUCKET" = '' ]; then
  echo Missing environment variable AWS_STATIC_BUCKET
  exit 13
fi
if [ "$CLIENT_LIB_VERSION " = '' ]; then
  echo Missing environment variable CLIENT_LIB_VERSION
  exit 13
fi

echo $(date) Create dirs
if [[ ! -d .uploadPublicFiles ]]; then mkdir .uploadPublicFiles && mkdir .uploadPublicFiles/log; fi

echo $(date) Clone s3cmd
if [[ ! -d .uploadPublicFiles/s3cmd ]]; then (git clone https://github.com/s3tools/s3cmd.git .uploadPublicFiles/s3cmd > .uploadPublicFiles/log/cloneS3cmd.log && git --git-dir=.uploadPublicFiles/s3cmd/.git checkout 9ee3bdd320c8 >> .uploadPublicFiles/log/cloneS3cmd.log ) fi

echo $(date) Grunt install
grunt install > .uploadPublicFiles/log/gruntInstall.log

echo $(date) Copy config key
if [[ -e .uploadPublicFiles/.s3cfg ]]; then
  rm .uploadPublicFiles/.s3cfg
fi
cp .s3cfg .uploadPublicFiles/.s3cfg
#writeConfigKey:
sed -i "s/AWS_SECRET_KEY/$AWS_SECRET_KEY/" .uploadPublicFiles/.s3cfg
#writeConfigSecret:
sed -i "s/AWS_ACCESS_KEY_ID/$AWS_ACCESS_KEY_ID/" .uploadPublicFiles/.s3cfg

echo $(date) Gzip
gzip -r --best compiledPublic > .uploadPublicFiles/log/gzipCompiledPublic.log

echo $(date) Rename
find compiledPublic -type f -name '*.gz' | while read filename; do mv -v "${filename}" "`echo "${filename}" | sed -e 's/\.gz$//'`"; done > .uploadPublicFiles/log/rename.log

echo $(date) Upload stylesheets
.uploadPublicFiles/s3cmd/s3cmd put -r compiledPublic/stylesheets s3://$AWS_STATIC_BUCKET/ --add-header="Content-Encoding:gzip" --config .uploadPublicFiles/.s3cfg > .uploadPublicFiles/log/uploadToS3.log

echo $(date) Upload js
.uploadPublicFiles/s3cmd/s3cmd put -r compiledPublic/javascripts/ s3://$AWS_STATIC_BUCKET/javascripts/$CLIENT_LIB_VERSION/ --exclude=compiledPublic/javascripts/lib/*.* --exclude=**/*.coffee --exclude=**/*.js.map --exclude=compiledPublic/javascripts/test/*.* --include=compiledPublic/javascripts/lib/requirejs/require.js --include=compiledPublic/javascripts/lib/bootstrap/fonts/*.*  --add-header="Content-Encoding:gzip" --mime-type=text/javascript --config .uploadPublicFiles/.s3cfg >> .uploadPublicFiles/log/uploadToS3.log

echo $(date) Upload images
.uploadPublicFiles/s3cmd/s3cmd put -r compiledPublic/images s3://$AWS_STATIC_BUCKET/ --add-header="Content-Encoding:gzip" --config .uploadPublicFiles/.s3cfg >> .uploadPublicFiles/log/uploadToS3.log

echo $(date) Upload fonts
.uploadPublicFiles/s3cmd/s3cmd put -r compiledPublic/fonts s3://$AWS_STATIC_BUCKET/ --add-header="Content-Encoding:gzip" --config .uploadPublicFiles/.s3cfg >> .uploadPublicFiles/log/uploadToS3.log

echo $(date) Deleting temp javascript files
find test -name "*.js" -type f -delete
find app -name "*.js" -type f -delete
find ./public/javascripts/ -type f -name "*.js" ! -path "./public/javascripts/lib/*" -delete

echo $(date) Done!
